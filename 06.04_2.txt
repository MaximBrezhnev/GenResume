Коренным образом пересмотреть всю структуру сериализации. По факту
используется меньше сералиализаторов, чем есть. Потом вернуться к реализации e-mail,
потому как тот формат, что я сделал неверен, его все равно потом придется переделывать
и я сейчас просто убью время на создание костылей для обхождения своих же недочетов
в сериализации
Какие сериализаторы мне нужны и их структура:
1. view: choose_position - get
десериализатор не нужен - выбираю позицию из запроса
сериализатор1: PositionTypesSerializer: просто список типов вместо вложенных структур,
нет смысла связывать с моделью, так как валидации нет - просто надо обозначить структуру
сериализатор2: PositionAndIndustryListSerializer: имя позиции и список отраслей вместо
вложенных структур, нет смысла связываать с моделью, так как валидации нет - просто надо
обозначить структуру
2. view: create_position - post
десериализатор1: CreatePositionDeserializer - position_name и position_type_name - связать
с моделью, так как есть валидация, второе поле не связывать, так как валидации нет
сериализатор2: PositionAndIndustryList (описан в пункте 1)
3. view: get_competencies - get
десериализатора нет, данные беру из get-запроса
сериализатор3: PositionIndustryandCompetenciesSerializer(не связан с моделю: 2 имени
и список)

В данном случае при использовании классического подхода получаю лишнюю вложенность,
не имеющую здесть смысла. Валидация, исходя из рассмотренного, нужна лишь в
одном случае. Таким образом, для всех ответов есть для доков, а для запросов
для post. В остальных 2 нет концептуальной надобности

Обдумать переход от классов к функциям
